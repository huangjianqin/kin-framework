<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>kin-framework</artifactId>
    <groupId>org.kin</groupId>
    <version>0.1.0.0</version>
    <packaging>jar</packaging>

    <properties>
        <java.version>1.8</java.version>
        <CodeCacheSize>512m</CodeCacheSize>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.home>/Library/Java/JavaVirtualMachines/jdk1.8.0_151.jdk/Contents/Home</java.home>

        <scala.version>2.12.10</scala.version>
        <scala.version.head>2.12</scala.version.head>
        <logback.version>1.2.3</logback.version>
        <log4j.version>1.2.17</log4j.version>
        <slf4j.version>1.7.21</slf4j.version>
        <guava.version>27.1-jre</guava.version>
        <fastutil.version>8.1.0</fastutil.version>
        <spring.version>5.2.7.RELEASE</spring.version>
        <kin-java-agent.version>0.1.0.0</kin-java-agent.version>
        <reflections.version>0.9.11</reflections.version>
        <jmh.version>1.21</jmh.version>
        <jyaml.version>1.3</jyaml.version>
        <jackson.version>2.10.1</jackson.version>
        <javassist.version>3.25.0-GA</javassist.version>
        <commons-exec.version>1.3</commons-exec.version>
        <jgit.version>5.6.1.202002131546-r</jgit.version>
        <svnkit.version>1.10.1</svnkit.version>
        <commons-io.version>2.7</commons-io.version>
    </properties>

    <dependencies>
        <!-- scala-->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- 日志包-->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- 工具包-->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <dependency>
            <groupId>it.unimi.dsi</groupId>
            <artifactId>fastutil</artifactId>
            <version>${fastutil.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- spring-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- java agent 依赖-->
        <dependency>
            <groupId>org.kin</groupId>
            <artifactId>kin-java-agent</artifactId>
            <version>${kin-java-agent.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.sun</groupId>
                    <artifactId>tools</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- java运行时元数据分析工具-->
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>${reflections.version}</version>
        </dependency>

        <!-- java微基准测试工具   用于较细粒度测试-->
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-core</artifactId>
            <version>${jmh.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-generator-annprocess</artifactId>
            <version>${jmh.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- 解析yml-->
        <dependency>
            <groupId>org.jyaml</groupId>
            <artifactId>jyaml</artifactId>
            <version>${jyaml.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- jackson-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- 字节码技术 -->
        <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>${javassist.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- 命令行工具 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-exec</artifactId>
            <version>${commons-exec.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- git操作工具 -->
        <dependency>
            <groupId>org.eclipse.jgit</groupId>
            <artifactId>org.eclipse.jgit</artifactId>
            <version>${jgit.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- svn操作工具 -->
        <dependency>
            <groupId>org.tmatesoft.svnkit</groupId>
            <artifactId>svnkit</artifactId>
            <version>${svnkit.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- io操作工具 -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>${basedir}/src/main/java</sourceDirectory>
        <testSourceDirectory>${basedir}/src/test/java</testSourceDirectory>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>${basedir}/src/test/resources</directory>
            </testResource>
        </testResources>

        <plugins>
            <!-- maven scala编译插件-->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>scala-compile</id>
                        <!-- 触发mvn compiler时 触发<goal>操作-->
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <!-- <configuration>写到<execution>里面似乎不会生效, 但不会报错-->
                <configuration>
                    <sourceDir>src/main/scala</sourceDir>
                    <scalaVersion>${scala.version}</scalaVersion>
                    <recompileMode>incremental</recompileMode>
                    <useZincServer>true</useZincServer>
                    <args>
                        <arg>-unchecked</arg>
                        <arg>-deprecation</arg>
                        <arg>-feature</arg>
                    </args>
                    <jvmArgs>
                        <jvmArg>-Xms1024m</jvmArg>
                        <jvmArg>-Xmx1024m</jvmArg>
                        <jvmArg>-XX:ReservedCodeCacheSize=${CodeCacheSize}</jvmArg>
                    </jvmArgs>
                    <javacArgs>
                        <!-- key value要分开两个标签写-->
                        <javacArg>-source</javacArg>
                        <javacArg>${java.version}</javacArg>
                        <javacArg>-target</javacArg>
                        <javacArg>${java.version}</javacArg>
                        <javacArg>-Xlint:all,-serial,-path</javacArg>
                        <javacArg>-bootclasspath</javacArg>
                        <!-- 热更实现依赖了jdk的tools.jar-->
                        <javacArg>.:${java.home}/jre/lib/rt.jar:${java.home}/jre/lib/jce.jar:${java.home}/lib/tools.jar</javacArg>
                    </javacArgs>
                </configuration>
            </plugin>

            <!-- maven编译插件, 只编译java-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding>
                    <maxmem>1024m</maxmem>
                    <!--<fork>true</fork>-->
                    <compilerArguments>
                        <!--<verbose/>-->
                        <!-- 热更实现依赖了jdk的tools.jar-->
                        <bootclasspath>${java.home}/jre/lib/rt.jar:${java.home}/jre/lib/jce.jar:${java.home}/lib/tools.jar</bootclasspath>
                    </compilerArguments>
                </configuration>
            </plugin>

            <!-- maven处理依赖插件, -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <!-- 复制项目依赖到指定路径-->
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- maven打包插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
<!--                    <execution>-->
<!--                        <id>jar</id>-->
<!--                        <goals>-->
<!--                            &lt;!&ndash; 打包同时触发打包测试类, 此处再多一个<goal>jar</goal>的话, 会触发两次打包, 而且包名与默认的一样, 会导致包名冲突报错&ndash;&gt;-->
<!--                            <goal>test-jar</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
                </executions>
                <configuration>
                    <archive>
                        <manifest>
                            <!-- 添加依赖路径-->
<!--                            <addClasspath>true</addClasspath>-->
                            <!-- 依赖路径前缀-->
<!--                            <classpathPrefix>lib/</classpathPrefix>-->
                            <!--<mainClass>spark.demo.run.Service</mainClass>-->
                        </manifest>
                        <manifestEntries>
                            <!-- manifest内自定义的key value-->
                            <Agent-Class>
                                org.kin.framework.hotswap.agent.JavaDynamicAgent
                            </Agent-Class>
                            <Can-Redefine-Classes>true</Can-Redefine-Classes>
                            <Can-Retransform-Classes>true</Can-Retransform-Classes>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <!-- maven打包插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.5.5</version>
                <executions>
<!--                    <execution>-->
<!--                        <id>make-assembly</id>-->
<!--                        <goals>-->
<!--                            &lt;!&ndash; 会把依赖直接写进jar包&ndash;&gt;-->
<!--                            <goal>single</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
                </executions>
                <configuration>
                    <archive>
                        <manifest>
<!--                            <addClasspath>true</addClasspath>-->
<!--                            <classpathPrefix>lib/</classpathPrefix>-->
                            <!--<mainClass></mainClass>-->
                        </manifest>
                        <manifestEntries>
                            <Agent-Class>
                                org.kin.framework.hotswap.agent.JavaDynamicAgent
                            </Agent-Class>
                            <Can-Redefine-Classes>true</Can-Redefine-Classes>
                            <Can-Retransform-Classes>true</Can-Retransform-Classes>
                        </manifestEntries>
                    </archive>
                    <descriptorRefs>
                        <!-- 包名后缀-->
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>

            <!-- 仅仅添加/src/main/java的源码-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                            <goal>test-jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <attach>false</attach>
                </configuration>
            </plugin>

            <!-- 添加多个源代码目录-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>add-test-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <sources>
                        <!-- 会自动根据源代码类型, 决定是否导入该source-->
                        <source>${basedir}/src/main/scala</source>
                        <source>${basedir}/src/test/scala</source>
                    </sources>
                </configuration>
            </plugin>

            <!-- jmh插件, install时会触发-->
            <!--<plugin>-->
                <!--<groupId>org.codehaus.mojo</groupId>-->
                <!--<artifactId>exec-maven-plugin</artifactId>-->
                <!--<version>1.6.0</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>run-benchmarks</id>-->
                        <!--<phase>integration-test</phase>-->
                        <!--<goals>-->
                            <!--<goal>exec</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
                <!--<configuration>-->
                    <!--<classpathScope>test</classpathScope>-->
                    <!--&lt;!&ndash; 以java执行&ndash;&gt;-->
                    <!--<executable>java</executable>-->
                    <!--<arguments>-->
                        <!--<argument>-classpath</argument>-->
                        <!--<classpath />-->
                        <!--&lt;!&ndash; 会自动扫描jmh注解并执行相应测试&ndash;&gt;-->
                        <!--<argument>org.openjdk.jmh.Main</argument>-->
                        <!--<argument>.*</argument>-->
                    <!--</arguments>-->
                <!--</configuration>-->
            <!--</plugin>-->
        </plugins>
    </build>
</project>