<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>kin-framework</artifactId>
    <modules>
        <module>kin-framework-java</module>
        <module>kin-framework-scala</module>
        <module>kin-framework-asyncdb</module>
        <module>kin-framework-hotswap</module>
        <module>kin-framework-groovy</module>
    </modules>
    <groupId>org.kin</groupId>
    <version>0.1.0.0</version>
    <packaging>pom</packaging>

    <properties>
        <java.version>1.8</java.version>
        <CodeCacheSize>512m</CodeCacheSize>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <scala.version>2.12.10</scala.version>
        <scala.version.head>2.12</scala.version.head>
        <logback.version>1.2.3</logback.version>
        <log4j.version>1.2.17</log4j.version>
        <slf4j.version>1.7.21</slf4j.version>
        <guava.version>27.1-jre</guava.version>
        <fastutil.version>8.1.0</fastutil.version>
        <spring.version>5.2.7.RELEASE</spring.version>
        <kin-java-agent.version>0.1.0.0</kin-java-agent.version>
        <reflections.version>0.9.11</reflections.version>
        <jmh.version>1.21</jmh.version>
        <jyaml.version>1.3</jyaml.version>
        <jackson.version>2.10.1</jackson.version>
        <javassist.version>3.25.0-GA</javassist.version>
        <commons-exec.version>1.3</commons-exec.version>
        <jgit.version>5.6.1.202002131546-r</jgit.version>
        <svnkit.version>1.10.1</svnkit.version>
        <commons-io.version>2.7</commons-io.version>
        <qdox.version>2.0.0</qdox.version>
        <groovy.version>3.0.5</groovy.version>
    </properties>

    <build>
        <plugins>
            <!-- maven编译插件, 只编译java-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding>
                    <maxmem>1024m</maxmem>
                    <!--<fork>true</fork>-->
                    <compilerArguments>
                        <!--<verbose/>-->
                    </compilerArguments>
                </configuration>
            </plugin>

            <!-- maven处理依赖插件, -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <!-- 复制项目依赖到指定路径-->
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- maven打包插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <!--                    <execution>-->
                    <!--                        <id>jar</id>-->
                    <!--                        <goals>-->
                    <!--                            &lt;!&ndash; 打包同时触发打包测试类, 此处再多一个<goal>jar</goal>的话, 会触发两次打包, 而且包名与默认的一样, 会导致包名冲突报错&ndash;&gt;-->
                    <!--                            <goal>test-jar</goal>-->
                    <!--                        </goals>-->
                    <!--                    </execution>-->
                </executions>
                <configuration>
                    <archive>
                        <manifest>
                            <!-- 添加依赖路径-->
                            <!--                            <addClasspath>true</addClasspath>-->
                            <!-- 依赖路径前缀-->
                            <!--                            <classpathPrefix>lib/</classpathPrefix>-->
                            <!--<mainClass>spark.demo.run.Service</mainClass>-->
                        </manifest>
                        <manifestEntries>
                            <!-- manifest内自定义的key value-->
                            <Agent-Class>
                                org.kin.framework.hotswap.agent.JavaDynamicAgent
                            </Agent-Class>
                            <Can-Redefine-Classes>true</Can-Redefine-Classes>
                            <Can-Retransform-Classes>true</Can-Retransform-Classes>
                            <!--                            <Class-Path>lib/*</Class-Path>-->
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <!-- maven打包插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.5.5</version>
                <executions>
                    <!--                    <execution>-->
                    <!--                        <id>make-assembly</id>-->
                    <!--                        <goals>-->
                    <!--                            &lt;!&ndash; 会把依赖直接写进jar包&ndash;&gt;-->
                    <!--                            <goal>single</goal>-->
                    <!--                        </goals>-->
                    <!--                    </execution>-->
                </executions>
                <configuration>
                    <archive>
                        <manifest>
                            <!--                            <addClasspath>true</addClasspath>-->
                            <!--                            <classpathPrefix>lib/</classpathPrefix>-->
                            <!--<mainClass></mainClass>-->
                        </manifest>
                        <manifestEntries>
                            <Agent-Class>
                                org.kin.framework.hotswap.agent.JavaDynamicAgent
                            </Agent-Class>
                            <Can-Redefine-Classes>true</Can-Redefine-Classes>
                            <Can-Retransform-Classes>true</Can-Retransform-Classes>
                            <!--                            <Class-Path>lib/*</Class-Path>-->
                        </manifestEntries>
                    </archive>
                    <descriptorRefs>
                        <!-- 包名后缀-->
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>

            <!-- 仅仅添加/src/main/java的源码-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                            <goal>test-jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- jmh插件, install时会触发-->
            <!--<plugin>-->
            <!--<groupId>org.codehaus.mojo</groupId>-->
            <!--<artifactId>exec-maven-plugin</artifactId>-->
            <!--<version>1.6.0</version>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<id>run-benchmarks</id>-->
            <!--<phase>integration-test</phase>-->
            <!--<goals>-->
            <!--<goal>exec</goal>-->
            <!--</goals>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--<configuration>-->
            <!--<classpathScope>test</classpathScope>-->
            <!--&lt;!&ndash; 以java执行&ndash;&gt;-->
            <!--<executable>java</executable>-->
            <!--<arguments>-->
            <!--<argument>-classpath</argument>-->
            <!--<classpath />-->
            <!--&lt;!&ndash; 会自动扫描jmh注解并执行相应测试&ndash;&gt;-->
            <!--<argument>org.openjdk.jmh.Main</argument>-->
            <!--<argument>.*</argument>-->
            <!--</arguments>-->
            <!--</configuration>-->
            <!--</plugin>-->
        </plugins>
    </build>
</project>